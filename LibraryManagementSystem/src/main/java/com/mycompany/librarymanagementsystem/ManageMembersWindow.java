/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.librarymanagementsystem;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.HashSet;
import java.util.Set;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yan
 */
public class ManageMembersWindow extends javax.swing.JFrame {

    /**
     * Creates new form ManageMembersWindow
     */
    public ManageMembersWindow() {
        initComponents();
        loadDataFromFile("ManageMember.txt");
    }
    
    private void loadDataFromFile(String filePath) {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        // Load borrowed book titles into a Set for fast lookup

        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] data = line.split(",");
                model.addRow(data);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private void populateTable() {
        String borrowedFilePath = "ManageBorrowed.txt"; // Path to the borrowed books file
        String accountFilePath = "ManageMember.txt";   // Path to the account file
        String returnedFilePath = "ManageReturned.txt";  // Path to the returned books file
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
        LocalDateTime now = LocalDateTime.now();

        try {
            // Load returned books into a set for quick lookup
            Set<String> returnedBooks = new HashSet<>();
            try (BufferedReader returnedReader = new BufferedReader(new FileReader(returnedFilePath))) {
                String returnedLine;
                while ((returnedLine = returnedReader.readLine()) != null) {
                    String[] parts = returnedLine.split("\\s+", 2);
                    if (parts.length > 0) {
                        returnedBooks.add(parts[0]); // Add first word of each line
                    }
                }
            }

            // Read borrowed and account data
            try (BufferedReader borrowedReader = new BufferedReader(new FileReader(borrowedFilePath));
                 BufferedReader accountReader = new BufferedReader(new FileReader(accountFilePath))) {

                String bookLine;
                String memberLine;
                while ((bookLine = borrowedReader.readLine()) != null &&
                       (memberLine = accountReader.readLine()) != null) {
                    // Parse borrowed and member details
                    String[] bookParts = bookLine.split("\\s+", 2);
                    String[] memberParts = memberLine.split("\\s+", 2);

                    if (bookParts.length > 0 && memberParts.length > 0) {
                        String bookID = bookParts[0];
                        String memberID = memberParts[0];
                        String returnedDate = returnedBooks.contains(bookID) ? now.format(formatter) : null;

                        // Add row to the table
                        model.addRow(new Object[]{memberID, bookID, now.format(formatter), returnedDate});
                    }
                }
            }

        } catch (IOException e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                "An error occurred while populating the table: " + e.getMessage(), 
                "Error", 
                javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }



    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BackButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member", "Book Title", "Book Issued", "Book Returned"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 550, 280));

        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Dark_Back.png"))); // NOI18N
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        jPanel1.add(BackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 400, 200, 80));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Manage Members (2).png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // TODO add your handling code here:
        DASHBOARD dash = new DASHBOARD();
        setVisible(false);
        dash.setVisible(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageMembersWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageMembersWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageMembersWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageMembersWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageMembersWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
