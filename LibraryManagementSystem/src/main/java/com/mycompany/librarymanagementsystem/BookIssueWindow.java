/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.librarymanagementsystem;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

/**
 *
 * @author yan
 */
public class BookIssueWindow extends javax.swing.JFrame {

    /**
     * Creates new form BookIssueWindow
     */
    public BookIssueWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Dark_Back.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 370, 200, 80));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Dark_Search.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, 220, 80));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 192, 410, 30));

        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 252, 410, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/BG_BookIssueWindow.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 490));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DASHBOARD dash = new DASHBOARD();
        setVisible(false);
        dash.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String searchTitle = jTextField1.getText().trim(); // Get the book title from input
        String memberName = jTextField2.getText().trim(); // Get the member name from input
        String inputFilePath = "ManageLibrary.txt"; // Path to your books list file
        String borrowedFilePath = "ManageBorrowed.txt"; // Path to your borrowed books list file
        String membersFilePath = "ManageMember.txt"; // Path to save member names

        if (searchTitle.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                    "Please enter a book title to search.", 
                    "Input Error", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (memberName.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                    "Please enter a member name.", 
                    "Input Error", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        boolean bookFound = false;
        boolean isBorrowed = false;

        // Check if the book is already borrowed
        try (BufferedReader borrowedReader = new BufferedReader(new FileReader(borrowedFilePath))) {
            String line;
            while ((line = borrowedReader.readLine()) != null) {
                if (line.equalsIgnoreCase(searchTitle)) { // Check if the exact title exists in the borrowed list
                    isBorrowed = true;
                    break;
                }
            }
        } catch (IOException e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                    "An error occurred while reading borrowed books: " + e.getMessage(), 
                    "Error", 
                    javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        // If the book is borrowed, show an error message
        if (isBorrowed) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                    "The book is already borrowed and is not available: " + searchTitle, 
                    "Book Not Available", 
                    javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Check if the book exists in the available books list
        try (BufferedReader reader = new BufferedReader(new FileReader(inputFilePath));
             BufferedWriter writer = new BufferedWriter(new FileWriter(borrowedFilePath, true))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(","); // Assuming the file is comma-separated
                String bookTitle = parts[0].trim(); // Extract the book title (first part of the line)

                if (bookTitle.equalsIgnoreCase(searchTitle)) { // Match found
                    writer.write(bookTitle); // Write only the book title to the borrowed file
                    writer.newLine();
                    bookFound = true;
                    break;
                }
            }

            if (bookFound) {
                // Write member name to MembersList.txt
                try (BufferedWriter memberWriter = new BufferedWriter(new FileWriter(membersFilePath, true))) {
                    memberWriter.write(memberName); // Write the member name to the file
                    memberWriter.newLine();
                } catch (IOException e) {
                    javax.swing.JOptionPane.showMessageDialog(this, 
                            "An error occurred while saving the member name: " + e.getMessage(), 
                            "Error", 
                            javax.swing.JOptionPane.ERROR_MESSAGE);
                    return;
                }

                javax.swing.JOptionPane.showMessageDialog(this, 
                        "Book found and added to borrowed list:\n" + searchTitle + 
                        "\nMember: " + memberName, 
                        "Success", 
                        javax.swing.JOptionPane.INFORMATION_MESSAGE);
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, 
                        "Book not found: " + searchTitle, 
                        "Not Found", 
                        javax.swing.JOptionPane.WARNING_MESSAGE);
            }

        } catch (IOException e) {
            javax.swing.JOptionPane.showMessageDialog(this, 
                    "An error occurred: " + e.getMessage(), 
                    "Error", 
                    javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookIssueWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookIssueWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookIssueWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookIssueWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookIssueWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
